<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="emails"       type="System.Configuration.NameValueFileSectionHandler,System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  </configSections>

  <!-- These emails are used to send notifications to users when calendar events are being created, deleted or updated. -->
  <emails>
    <add key="User1" value="user1@caldavserver.com" />
    <add key="User2" value="user2@caldavserver.com" />
  </emails>
  <connectionStrings>
    <!-- 
    To enable full-text search in case of WebDAV project, including Microsoft Office documents content search, follow instructions in 
    DB.sql to enable full-text indexing and uncomment code in Search method in DavFolder.cs.
    Note that full-text search is not supported on Microsoft SQL LocalDB/Express editions. You need Microsoft SQL Server Web edition or higher.
    -->    
    <add name="WebDAV" connectionString="Server=(localdb)\v11.0;Integrated Security=SSPI;AttachDbFileName=|DataDirectory|\WebDav\DB\WebDav.mdf" providerName="System.Data.SqlClient"/>
    <!--<add name="WebDAV" connectionString="data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|\WebDav\DB\webdav.mdf;User Instance=true" providerName="System.Data.SqlClient"/>-->
  </connectionStrings>
  
  <appSettings>
    <add key="DebugLoggingEnabled" value="true"/>
    <add key="LogPath" value="~/App_Data/WebDav/Logs"/>
    
  </appSettings>
    
  <!--
  It is recommended to run your WebDAV Server in Integrated mode (Available for IIS 7.x and later and IIS Express only). It provides
  improved performance comparing to Classic mode. The Visual Studio ASP.NET Development Server can run in Classic mode only.  
  
  In case of IIS 6 and IIS 5.1, to allow folders with 'bin', 'App_code', 'App_Data', etc names and files with 'web.config' name 
  to be created in your storage, the aspnet_filter.dll mapping must be deleted at server level.
  -->
  <system.web>   
    <httpHandlers>
      
      <!-- 
      As soon as entire website is dedicated to WebDAV and there are no any ASP.NET web pages, services, etc we can remove 
      all handlers here. If you wish to host your WebDAV server and ASP.NET/MVC website on the same virtual host use "Add WebDAV 
      Server Implementation" wizard in your ASP.NET/MVC project or web site context menu.
      -->
      <clear />
      
      <!--       
      This handler processes all WebDAV requests.
      
      This WebDAV config section is used in application pool Classic mode.
      In case of IIS 6 and IIS 5.1 the wildcard map must be configured in IIS.
      -->
      <add verb="*" path="*" type="CalDAVServer.SqlStorage.AspNet.DavHandler, CalDAVServer.SqlStorage.AspNet" />
    </httpHandlers>
    
    <httpModules>
      
      <!-- As all files are stored in a storage there is no need to verify permissions against Windows ACL using FileAuthorization module. -->
      <remove name="FileAuthorization" />
      
      <!--            
      Provides sample Basic authentication implementation that is supported by all WebDAV/CalDAV/CardDAV clients. The user credentials are 
      validated against ASP.NET membership storage.

      Basic cannot validate credentials against Facebook, Google, Twitter, etc, as these providers require HTML web page to be presented by 
      the client application. In case you are using Microsoft Office only, you can utilize MS-OFBA for this purpose.
            
      IMPORTANT! Microsoft Office and Windows Shell (Miniredirector/Web Folders) require secure SSL connection for Basic authentication. 
      If you need to setup non-SSL connection for testing purposes please see the workaround here: http://support.microsoft.com/kb/2123563
      
      This WebDAV config section is used in application pool Classic mode.
      -->
      <add name="MyBasicAuthenticationModule" type="CalDAVServer.SqlStorage.AspNet.BasicAuthenticationModule, CalDAVServer.SqlStorage.AspNet" />

      <!-- This module creates initial calendar(s) and address book(s) for user during first log-in.-->
      <add name="MyProvisioningModule" type="CalDAVServer.SqlStorage.AspNet.Provisioning, CalDAVServer.SqlStorage.AspNet" />
    </httpModules>

    <!-- 
    Maximum upload file segment size in Kb, max 2097151 (2Gb) for asp.net.
    
    To allow '&' and '%' in ASP.NET 4.x set the httpRuntime@requestPathInvalidCharacters="". Note that 
    Microsoft Windows Shell (Miniredirector/Web Folders) does not support '%' in WebDAV item names.
    
    To allow trailing dots ('.') in ASP.NET 4.x set httpRuntime@relaxedUrlToFileSystemMapping="true".
    -->
    <httpRuntime executionTimeout="2400" maxRequestLength="2097151" requestPathInvalidCharacters="" relaxedUrlToFileSystemMapping="true" targetFramework="4.5.1" />
    <customErrors mode="Off" />
    
    <!-- 
    Authentication is set to 'None' here because authentication is performed not by asp.net but by authentication module configured in modules section.
    This sections is used for storing user names/passwords solely to be available to authentication modules via FormsMembershipProvider.
     -->
    <authentication mode="None">
      <forms>
        <credentials passwordFormat="Clear" >
          <user name="User1"  password="pwd"/>
          <user name="User2"  password="pwd"/>
        </credentials>
      </forms>      
    </authentication>
    <membership defaultProvider="FormsProvider">
      <providers>
        <!-- This provider returns information about users/groups configured in authentication/forms/credentials section-->
        <add
          name="FormsProvider"
          type="CalDAVServer.SqlStorage.AspNet.FormsMembershipProvider"/>
      </providers>
    </membership>
    
    <authorization>
      <!-- 
      To support Windows Shell (Miniredirector/Web Folders) on XP and Server 2003 as well as Firefox CORS requests, OPTIONS must be 
      processed without authentication. To enable authentication of OPTIONS request, remove "allow OPTIONS" from the list below and 
      remove OPTIONS check in AuthenticationModuleBase.App_OnAuthenticateRequest.
      -->
      <allow users="*" verbs="OPTIONS"/>
      <deny users="?"/>
      <allow users="*" />
    </authorization>
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
    <compilation targetFramework="4.5.1" debug="true"/>
  </system.web>
  
    <system.webServer>
    <handlers>

      <!-- 
        As soon as this folder is dedicated to WebDAV and there are no any ASP.NET web pages, services, etc we can remove 
        all handlers here.
        -->
      <clear />
      
      <!-- Used only in IIS 7.x and later in Classic mode in 32-bit application if ASP.NET 2.0 pool is used -->
      <add name="aspnet_isapi 32-bit ASP.NET 2.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv2.0,bitness32" />

      <!-- Used only in IIS 7.x and later in Classic mode in 64-bit application if ASP.NET 2.0 pool is used -->
      <add name="aspnet_isapi 64-bit ASP.NET 2.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv2.0,bitness64" />

      <!-- Used only in IIS 7.x and later in Classic mode in 32-bit application if ASP.NET 4.0 pool is used -->
      <add name="aspnet_isapi 32-bit ASP.NET 4.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv4.0,bitness32" />

      <!-- Used only in IIS 7.x and later in Classic mode in 64-bit application if ASP.NET 4.0 pool is used -->
      <add name="aspnet_isapi 64-bit ASP.NET 4.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv4.0,bitness64" />

      <!-- Used only in IIS 7.x and later in Integrated mode. In Classic mode system.web\httpHandlers section is used. -->
      <add name="My WebDAV Handler" path="*" verb="*" type="CalDAVServer.SqlStorage.AspNet.DavHandler, CalDAVServer.SqlStorage.AspNet" preCondition="integratedMode" />
    </handlers>
    <!-- Used only in Integrated mode. In Classic mode system.web\httpModules section is used. -->
    <modules>

      <!-- As all files are stored in a storage there is no need to verify permissions against Windows ACL using FileAuthorization module. -->
      <remove name="FileAuthorization" />

      <!--            
      Provides sample Basic authentication implementation that is supported by all WebDAV/CalDAV/CardDAV clients. The user credentials are 
      validated against ASP.NET membership storage.
      
      Basic cannot validate credentials against Facebook, Google, Twitter, etc, as these providers require HTML web page to be presented by 
      the client application. In case you are using Microsoft Office only, you can utilize MS-OFBA for this purpose.
      
      IMPORTANT! Microsoft Office and Windows Shell (Miniredirector/Web Folders) require secure SSL connection for Basic authentication. 
      If you need to setup non-SSL connection for testing purposes please see the workaround here: http://support.microsoft.com/kb/2123563
      
      This WebDAV config section is used in IIS 7.x and later Integrated mode only, no wildcard map configuration is required.
      -->
      <add name="MyBasicAuthenticationModule" type="CalDAVServer.SqlStorage.AspNet.BasicAuthenticationModule, CalDAVServer.SqlStorage.AspNet" />

      <!-- This module creates initial calendar(s) and address book(s) for user during first log-in.-->
      <add name="MyProvisioningModule" type="CalDAVServer.SqlStorage.AspNet.Provisioning, CalDAVServer.SqlStorage.AspNet" preCondition="integratedMode" />      
      
      <!-- Disables Microsoft IIS 7.x and later WebDAV in Integrated mode. It must be disabled for the engine to function properly. -->
      <remove name="WebDAVModule" />
    </modules>
      
    <validation validateIntegratedModeConfiguration="false" />

    <!-- Used in both Integrated and Classic mode -->
    <security>
      <!-- 
      As all files are stored in a storage there is no need in additional protection.
      
      * To allow '+' in item names the allowDoubleEscaping attribute is set to 'true'.
      * To allow '&' and '%' in ASP.NET 2.0, IIS 7.x and later the "VerificationCompatibility"= dword:00000001 must be set under the 
        key: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ASP.NET
      * To allow '&' and '%' in ASP.NET 4.x set the configuration\system.web\httpRuntime@requestPathInvalidCharacters="".
      * To allow trailing dots ('.') in ASP.NET 4.x set httpRuntime@relaxedUrlToFileSystemMapping="true".
      Note that Microsoft Windows Shell (Miniredirector/Web Folders) does not support '%' in WebDAV item names.
      -->
      <requestFiltering allowDoubleEscaping="true">

        <!-- Allow all files with 'web.config' name. -->
        <fileExtensions>
          <clear />
        </fileExtensions>

        <!-- Allow all folders with 'bin', 'App_code', 'App_Data', etc names. -->				
        <hiddenSegments>
          <clear />
        </hiddenSegments>

        <!-- Maximum upload file segment size in bytes is 2147483648 (2Gb) for IIS 7.x and later / asp.net. -->
        <requestLimits maxAllowedContentLength="2147483648"/>
      </requestFiltering>
    </security>
  </system.webServer>
  <system.net>
    <mailSettings>
      <!-- 
      This section is used by iMipEventSchedulingTransport class to send email notifications about meetings.
      To use Gmail SMTP server set the following parameters:
      defaultCredentials  = "false" 
      host                = "smtp.gmail.com"
      port                = "587"
      from                = "myemail@gmail.com"
      userName            = "myemail@gmail.com"
      password            = "mygmailpassword" 
      Note that 'from' attribute must match your gmail e-mail and match the 'userName' attribute.
      -->
      <smtp from="calendar@mycaldavserver.com" deliveryMethod="Network">
        <network defaultCredentials="false" host="smtp.mycaldavserver.com" port="587" userName="calendar@mycaldavserver.com" password="mycaldavpassword" />
      </smtp>
    </mailSettings>
  </system.net>
</configuration>