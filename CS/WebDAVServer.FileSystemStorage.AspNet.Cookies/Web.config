<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  
    <section name="davLocations" type="System.Configuration.NameValueFileSectionHandler,System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  </configSections>

  
  <connectionStrings>
    <add name="DefaultConnection" connectionString="Data Source=(LocalDb)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\aspnet-WebDAVServer.FileSystemStorage.AspNet.Cookies-737103.mdf;Initial Catalog=aspnet-WebDAVServer.FileSystemStorage.AspNet.Cookies-737103;Integrated Security=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  
    <add key="DebugLoggingEnabled" value="true" />
    <add key="LogPath" value="~/App_Data/WebDav/Logs" />
    <add key="RepositoryPath" value="~/App_Data/WebDav/Storage" />

    <!-- 
    File system search provider. This provider is available on Windows Vista and later versions as well as on Window Server 2008.
    It is not available on Web-editions of Windows Server OS by default.
    To get search results file system indexing on the folder that contains documents (storage folder) must be enabled.
    To find how to enable indexing follow this link: http://windows.microsoft.com/en-us/windows/improve-windows-searches-using-index-faq 
     -->
    <add key="WindowsSearchProvider" value="Provider=Search.CollatorDSO;Extended Properties=&quot;Application=Windows&quot;" />
    
  </appSettings>
    
  
  <!--
  It is recommended to run your WebDAV Server in Integrated mode (Available for IIS 7.x and later and IIS Express only). It provides
  improved performance comparing to Classic mode. The Visual Studio ASP.NET Development Server can run in Classic mode only.  
  
  In case of IIS 6 and IIS 5.1, to allow folders with 'bin', 'App_code', 'App_Data', etc names and files with 'web.config' name 
  to be created in your storage, the aspnet_filter.dll mapping must be deleted at server level.
  -->
  <system.web>
    <authentication mode="None" />
    <compilation debug="true" targetFramework="4.5.1" />
    <!-- 
    Maximum upload file segment size in Kb, max 2097151 (2Gb) for asp.net.
    
    To allow '&' and '%' in ASP.NET 4.x set the httpRuntime@requestPathInvalidCharacters="". Note that 
    Microsoft Windows Shell (Miniredirector/Web Folders) does not support '%' in WebDAV item names.
    
    To allow trailing dots ('.') in ASP.NET 4.x set httpRuntime@relaxedUrlToFileSystemMapping="true".
    -->
    <httpRuntime targetFramework="4.5.1" executionTimeout="2400" maxRequestLength="2097151" requestPathInvalidCharacters="" relaxedUrlToFileSystemMapping="true" />
    
    <httpModules>
    
      <!--
      This module implements notifications to clients using web sockets. 
      Is used to refresh files list when files or folders are created, updated, deleted, copied, moved, locked, etc.
      -->
      <add name="WebSocketsHttpModule" type="WebDAVServer.FileSystemStorage.AspNet.Cookies.WebSocketsHttpModule" />
      
      <!-- 
      This module enables unbuffered PUT upload if ASP.NET 2.0 pool or VS Dev Server is used. It is required if you are implementing 
      resumable upload interfaces. Without this module, if ASP.NET 2.0 pool or VS Dev Server is used, the file will be first saved to 
      temporary ASP.NET upload folder, only when entire file is uploaded it becomes available for .NET user code and WebDAV Engine. 
      This module also improves upload performance for ASP.NET 2.0 pool regardless of resumable upload implementation. 
      
      This module is not required if ASP.NET 4.0 pool or later version is used and is ignored in this case.
      
      This WebDAV config section is used in application pool Classic mode.
      -->   
      <add name="ITHitPutUploadProgressAndResumeModule" type="ITHit.WebDAV.Server.ResumableUpload.PutUploadProgressAndResumeModule, ITHit.WebDAV.Server.Web" />
      
      <!--
      This module is required to enable files upload from Ajax File Browser running in Internet Explorer 9 and earlier versions. To display upload progress 
      IUploadProgress interface must be also implemented on file items. This module does not processes POST requests (postbacks) submitted 
      by ASP.NET pages. If you do not use Ajax File Browser or use it only in IE 10, Firefox, Safari and Chrome you can remove this module. 
      
      This WebDAV config section is used in application pool Classic mode.
      -->
      <add name="ITHitPostUploadProgressModule" type="ITHit.WebDAV.Server.PostUploadProgressModule, ITHit.WebDAV.Server.Web" />
      
      <!--
      This module is used in MVC project only. The davLocations configuration section is used by this module to determine WebDAV folder location.
      If you are using non-MVC project you can remove this module.
      
      This WebDAV config section is used in application pool Classic mode.
      -->
      <add name="ITHitUrlRoutingModule" type="WebDAVServer.FileSystemStorage.AspNet.Cookies.UrlRoutingModule" />
    </httpModules>

    
     
    <httpHandlers>
      <!--       
      This handler is required in following cases:
      
        - To process Microsoft Office and Windows Shell (Miniredirector/Web Folders) requests to site root. 
          These WebDAV clients may submit OPTIONS and PROPFIND requests to site root and each subfolder in file path. For example 
          if your document is located at \DAV\Folder\mydoc.docx Microsoft Office may submit OPTIONS and PROPFIND requests to site 
          root (\), \DAV\ and \DAV\Folder\ folders.
      
          IMPORTANT! If your server does not provide response to the above mentioned OPTIONS and PROPFIND requests Microsoft Office 
          will open your document as read-only or will be unable to save document directly to server. More about read-only Microsoft 
          Office issue and how to resolve it could be found here: http://www.webdavsystem.com/server/documentation/ms_office_read_only
       
        - To process discovery requests in case of CalDAV / CardDAV server (PROPFIND http://server/.well-known/caldav & 
          http://server/.well-known/carddav).
      
      This WebDAV config section is used in application pool Classic mode.
      In case of IIS 6 and IIS 5.1 the wildcard map must be configured in IIS.
      -->      
      <add verb="OPTIONS,PROPFIND" path="*" type="WebDAVServer.FileSystemStorage.AspNet.Cookies.DavHandler" />
    </httpHandlers>
    
    
    
    <authorization>
      <!-- 
      To support Windows Shell (Miniredirector/Web Folders) on XP and Server 2003 as well as Firefox CORS requests, OPTIONS must be 
      processed without authentication. To enable authentication of OPTIONS request, remove "allow OPTIONS" from the list below and 
      remove OPTIONS check in AuthenticationModuleBase.App_OnAuthenticateRequest.
      -->
      <allow users="*" verbs="OPTIONS" />
      <!-- 
      We must process PROPFIND on site root in the following cases:
        - If your WebDAV server is using Basic, Digest or IWA authentication PROPFIND requests to site root must be also authenticated. 
          Otherwise Windows Shell (Miniredirector/Web Folders) and Microsoft Office will fail to connect to your server.
        - If this is a CalDAV or CardDAV server, we must process discovery requests (PROPFIND http://server/.well-known/caldav 
          & http://server/.well-known/carddav).
      -->
      <deny users="?" verbs="PROPFIND" />
      <allow users="*" />
    </authorization>
    </system.web>
  
  <!-- 
     Section for IIS 7.x and later. ASP.NET and ISAPI Extensions must be enabled.
     Microsoft IIS 7.x and later WebDAV must be disabled for server to function properly in Classic mode.
    -->
  <system.webServer>
    <modules>
      <remove name="FormsAuthentication" />
    
      <!--
      This module implements notifications to clients using web sockets. 
      Is used to refresh files list when files or folders are created, updated, deleted, copied, moved, locked, etc.
      -->
      <add name="WebSocketsHttpModule" type="WebDAVServer.FileSystemStorage.AspNet.Cookies.WebSocketsHttpModule" />

      <!--
      This module enables unbuffered PUT upload if ASP.NET 2.0 pool or VS Dev Server is used. It is required if you are implementing 
      resumable upload interfaces. Without this module, if ASP.NET 2.0 pool or VS Dev Server is used, the file will be first saved to 
      temporary ASP.NET upload folder, only when entire file is uploaded it becomes available for .NET user code and WebDAV Engine. 
      This module also improves upload performance for ASP.NET 2.0 pool regardless of resumable upload implementation. 
      
      This module is not required if ASP.NET 4.0 pool or later version is used and is ignored in this case.
      
      This WebDAV config section is used in IIS 7.x and later Integrated mode only, no wildcard map configuration is required.      
      -->     
      <add name="ITHitPutUploadProgressAndResumeModule" type="ITHit.WebDAV.Server.ResumableUpload.PutUploadProgressAndResumeModule, ITHit.WebDAV.Server.Web" preCondition="integratedMode" />
      
      <!--
      This module is required to enable files upload from Ajax File Browser running in Internet Explorer 9 and earlier versions. To display upload progress 
      IUploadProgress interface must be also implemented on file items. This module does not processes POST requests (postbacks) submitted 
      by ASP.NET pages. If you do not use Ajax File Browser or use it only in IE 10, Firefox, Safari and Chrome you can remove this module. 
     
      This WebDAV config section is used in IIS 7.x and later Integrated mode only, no wildcard map configuration is required.      
      -->

      <add name="ITHitPostUploadProgressModule" type="ITHit.WebDAV.Server.PostUploadProgressModule, ITHit.WebDAV.Server.Web" preCondition="integratedMode" />
      
      <!--
      This module is used in MVC project only. The davLocations configuration section is used by this module to determine WebDAV folder location.
      If you are using non-MVC project you can remove this module.
      
      This WebDAV config section is used in IIS 7.x and later Integrated mode only, no wildcard map configuration is required.
      -->
      <add name="ITHitUrlRoutingModule" type="WebDAVServer.FileSystemStorage.AspNet.Cookies.UrlRoutingModule" preCondition="integratedMode" />

      <!-- Disables Microsoft IIS 7.x and later WebDAV in Integrated mode. It must be disabled for the engine to function properly. -->
      <remove name="WebDAVModule" />
    </modules>

    
    <validation validateIntegratedModeConfiguration="false" />
  
  
    <handlers>
      <!-- 
      This handler is required in the following cases:
      
        - To process Microsoft Office and Windows Shell (Miniredirector/Web Folders) requests to site root. 
          These WebDAV clients may submit OPTIONS and PROPFIND requests to site root and each subfolder in file path. For example 
          if your document is located at \DAV\Folder\mydoc.docx Microsoft Office may submit OPTIONS and PROPFIND requests to site 
          root (\), \DAV\ and \DAV\Folder\ folders.
      
          IMPORTANT! If your server does not provide response to the above mentioned OPTIONS and PROPFIND requests Microsoft Office 
          will open your document as read-only or will be unable to save document directly to server. More about read-only Microsoft 
          Office issue and how to resolve it could be found here: http://www.webdavsystem.com/server/documentation/ms_office_read_only
       
        - To process discovery requests in case of CalDAV / CardDAV server (PROPFIND http://server/.well-known/caldav & 
          http://server/.well-known/carddav).
      
      This WebDAV config section is used in IIS 7.x and later Integrated mode only, no wildcard map configuration is required.      
      -->
      <add name="My WebDAV Handler Root" path="*" verb="OPTIONS,PROPFIND" type="WebDAVServer.FileSystemStorage.AspNet.Cookies.DavHandler" preCondition="integratedMode" />
    </handlers>

    </system.webServer>
  
  
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.8.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.8.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
<!--
  This section is used in MVC project or in case of CalDAV/CardDAV project. 
  In case of MVC the ITHitUrlRoutingModule module is using it to determine WebDAV folder location.
  -->
  <davLocations>
    <add key="DAV" value="" />
    <add key="/" value="PROPFIND, OPTIONS" />
  </davLocations>
  
  <!-- 
  Your WebDAV server is available at URL specified in this location section in 'path' attribute. Use a WebDAV client to connect 
  to your WebDAV server and specify the following URL when connecting: http://localhost:3456/DAV/
  
  IMPORTANT! Wizard has also created the 'DAV' folder(s) in your storage. If you wish to 
  change this path you must change it here, in your storage and in davLocations section (in case of MVC or CalDAV/CardDAV project).
  -->
  <location path="DAV">
    <system.web>
      <!-- This section used in IIS 7.x and later in Classic mode -->
      <httpHandlers>
        <!-- 
        As soon as this folder is dedicated to WebDAV and there are no any ASP.NET web pages, services, etc we can remove 
        all handlers here.
        -->        
        <clear />

        <!-- 
        This WebDAV config section is used in application pool Classic mode. 
        In case of IIS 6 and IIS 5.1 the wildcard map must be configured in IIS.
        
        This handler processes all WebDAV requests to this folder.
        -->        
        <add verb="*" path="*" type="WebDAVServer.FileSystemStorage.AspNet.Cookies.DavHandler" />
      </httpHandlers>

      <!-- httpModules can be set at application level only -->
      
      <!-- 
      Maximum upload file segment size in Kb, max 2097151 (2Gb) for asp.net.
      
      To allow '&' and '%' in ASP.NET 4.x set the httpRuntime@requestPathInvalidCharacters="". Note that 
      Microsoft Windows Shell (Miniredirector/Web Folders) does not support '%' in WebDAV item names.
      
      To allow trailing dots ('.') in ASP.NET 4.x set httpRuntime@relaxedUrlToFileSystemMapping="true".
      -->
      <httpRuntime executionTimeout="2400" maxRequestLength="2097151" requestPathInvalidCharacters="" relaxedUrlToFileSystemMapping="true" />
      <customErrors mode="Off" />
      <authorization>
        <!-- 
            To support Windows Shell (Miniredirector/Web Folders) on XP and Server 2003 as well as Firefox CORS requests, OPTIONS must be 
            processed without authentication. To enable authentication of OPTIONS request, remove "allow OPTIONS" from the list below and 
            remove OPTIONS check in AuthenticationModuleBase.App_OnAuthenticateRequest.
        -->
        <allow users="*" verbs="OPTIONS" />
        <deny users="?" />
        <!-- Allow all users -->
        <allow users="*" />
      </authorization>
      <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
    </system.web>
  
    <system.webServer>
    <handlers>

      <!-- 
        As soon as this folder is dedicated to WebDAV and there are no any ASP.NET web pages, services, etc we can remove 
        all handlers here.
        -->
      <clear />
      
      <!-- Used only in IIS 7.x and later in Classic mode in 32-bit application if ASP.NET 2.0 pool is used -->
      <add name="aspnet_isapi 32-bit ASP.NET 2.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv2.0,bitness32" />

      <!-- Used only in IIS 7.x and later in Classic mode in 64-bit application if ASP.NET 2.0 pool is used -->
      <add name="aspnet_isapi 64-bit ASP.NET 2.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv2.0,bitness64" />

      <!-- Used only in IIS 7.x and later in Classic mode in 32-bit application if ASP.NET 4.0 pool is used -->
      <add name="aspnet_isapi 32-bit ASP.NET 4.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv4.0,bitness32" />

      <!-- Used only in IIS 7.x and later in Classic mode in 64-bit application if ASP.NET 4.0 pool is used -->
      <add name="aspnet_isapi 64-bit ASP.NET 4.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv4.0,bitness64" />

      <!-- Used only in IIS 7.x and later in Integrated mode. In Classic mode system.web\httpHandlers section is used. -->
      <add name="My WebDAV Handler" path="*" verb="*" type="WebDAVServer.FileSystemStorage.AspNet.Cookies.DavHandler" preCondition="integratedMode" />
    </handlers>
      
    <validation validateIntegratedModeConfiguration="false" />

    <!-- Used in both Integrated and Classic mode -->
    <security>
      <!-- 
      As all files are stored in a storage there is no need in additional protection.
      
      * To allow '+' in item names the allowDoubleEscaping attribute is set to 'true'.
      * To allow '&' and '%' in ASP.NET 2.0, IIS 7.x and later the "VerificationCompatibility"= dword:00000001 must be set under the 
        key: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ASP.NET
      * To allow '&' and '%' in ASP.NET 4.x set the configuration\system.web\httpRuntime@requestPathInvalidCharacters="".
      * To allow trailing dots ('.') in ASP.NET 4.x set httpRuntime@relaxedUrlToFileSystemMapping="true".
      Note that Microsoft Windows Shell (Miniredirector/Web Folders) does not support '%' in WebDAV item names.
      -->
      <requestFiltering allowDoubleEscaping="true">

        <!-- Allow all files with 'web.config' name. -->
        <fileExtensions>
          <clear />
        </fileExtensions>

        <!-- Allow all folders with 'bin', 'App_code', 'App_Data', etc names. -->				
        <hiddenSegments>
          <clear />
        </hiddenSegments>

        <!-- Maximum upload file segment size in bytes is 2147483648 (2Gb) for IIS 7.x and later / asp.net. -->
        <requestLimits maxAllowedContentLength="2147483648" />
      </requestFiltering>
    </security>
      
    <!-- 
      Enables custom protocol installers download. Required if WebDAV Ajax Library or Ajax File Browser are hosted on 
      this website. By default MIME map is not defined in IIS for .pkg and .deb files, 'HTTP Error 404.3 - Not Found' is 
      returned by IIS if these file types are requested.
      .msi and .gz MIME maps are defined in IIS by default, uncomment the lines below if needed.
    -->
    <staticContent>
      <mimeMap fileExtension=".pkg" mimeType="application/octet-stream" />
      <mimeMap fileExtension=".deb" mimeType="application/octet-stream" />      
      <!-- <mimeMap fileExtension=".msi" mimeType="application/octet-stream" /> -->
      <!-- <mimeMap fileExtension=".gz" mimeType="application/x-gzip" /> -->
    </staticContent>
  </system.webServer>
  </location>
</configuration>