<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <handlers>
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified"/>
    </handlers>
    <aspNetCore requestTimeout="01:00:00" processPath="%LAUNCHER_PATH%" arguments="%LAUNCHER_ARGS%" stdoutLogEnabled="true" stdoutLogFile="..\logs\stdout.log" forwardWindowsAuthToken="false"/>
    <security>

      <!-- 
      To allow '+' in item names the allowDoubleEscaping attribute is set to 'true'.
      Note that Microsoft Windows Shell (Miniredirector/Web Folders) does not support '%' in WebDAV item names.
      -->
      <requestFiltering allowDoubleEscaping="true">

        <!-- Allow all files with 'web.config' name. -->
        <fileExtensions>
          <clear />
        </fileExtensions>

        <!-- Allow all folders with 'bin', 'App_code', 'App_Data', etc names. -->				
        <hiddenSegments>
          <clear />
        </hiddenSegments>

        <!-- Maximum upload file segment size in bytes is 2147483648 (2Gb) for IIS 7.x and later / asp.net. -->    
        <requestLimits maxAllowedContentLength="2147483648"/>
      </requestFiltering>
    </security>
    
    <!-- Used only in Integrated mode. In Classic mode system.web\httpModules section is used. -->
    <modules>
      <!--
        To enable file upload > 2Gb in case you are running .NET Core server in IIS:
        1. Unlock RequestFilteringModule on server level in IIS.
        2. Remove RequestFilteringModule on site level. Uncomment code in web.config to remove the module.
        3. Set MaxRequestBodySize = null.
      -->
      <!--<remove name="RequestFilteringModule" />-->
      
      <!-- Disables Microsoft IIS 7.x and later WebDAV in Integrated mode. It must be disabled for the engine to function properly. -->
      <remove name="WebDAVModule" />
    </modules>
    
    <!-- 
      Enables custom protocol installers download. Required if WebDAV Ajax Library or Ajax File Browser are hosted on 
      this website. By default MIME map is not defined in IIS for .pkg and .deb files, 'HTTP Error 404.3 - Not Found' is 
      returned by IIS if these file types are requested.
      .msi and .gz MIME maps are defined in IIS by default, uncomment the lines below if needed.
    -->    
    <staticContent>
      <mimeMap fileExtension=".pkg" mimeType="application/octet-stream" />
      <mimeMap fileExtension=".deb" mimeType="application/octet-stream" />
      <!-- <mimeMap fileExtension=".msi" mimeType="application/octet-stream" /> -->
      <!-- <mimeMap fileExtension=".gz" mimeType="application/x-gzip" /> -->
    </staticContent>
  </system.webServer>
</configuration>